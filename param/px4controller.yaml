global_frame: /map
robot_base_frame: /base_link
transform_tolerance: 0.8

# update_frequency: 5.0
# publish_frequency: 0.0

#set if you want the voxel map published
# publish_voxel_map: true

#set to true if you want to initialize the costmap from a static map
static_map: false

#begin - COMMENT these lines if you set static_map to true
rolling_window: false
width: 100.0
height: 100.0
resolution: 0.5
origin_x: -50.0
origin_y: -50.0
#end - COMMENT these lines if you set static_map to true

#START VOXEL STUFF
# map_type: voxel
# origin_z: 0.0
# z_resolution: 2.0
# z_voxels: 1
# unknown_threshold: 10
# mark_threshold: 0
#END VOXEL STUFF

#The default maximum distance from the robot at which an obstacle will be inserted into the cost map in meters.
#This can be over-ridden on a per-sensor basis.
obstacle_range: 2.5

#The maximum height of any obstacle to be inserted into the costmap in meters.
#This parameter should be set to be slightly higher than the height of your robot.
max_obstacle_height: 50.0

#The default range in meters at which to raytrace out obstacles from the map using sensor data.
#This can be over-ridden on a per-sensor basis.
raytrace_range: 3.0

#The footprint of the robot specified in the robot_base_frame coordinate frame as a list
footprint: [[-0.30, -0.30], [-0.30, 0.30], [0.30, 0.30], [0.30, -0.30]]

footprint_padding: 2.00

#The radius in meters to which the map inflates obstacle cost values.
inflation_radius: 0.55

#A scaling factor to apply to cost values during inflation.
cost_scaling_factor: 10.0
lethal_cost_threshold: 100

#A list of observation source names separated by spaces.
#This defines each of the <source_name> namespaces defined below.
# observation_sources: cloud
#
# cloud: {
# topic: /stereo_avoid/filtered_points,
# #The data type associated with the topic, right now only "PointCloud", "PointCloud2", and "LaserScan" are supported.
# data_type: PointCloud2,
# #How often to expect a reading from a sensor in seconds.
# expected_update_rate: 10.0,
# #How long to keep each sensor reading in seconds.
# observation_persistence: 0.0,
# #Whether or not this observation should be used to mark obstacles.
# marking: true,
# #Whether or not this observation should be used to clear out freespace.
# clearing: false,
# #The maximum height in meters of a sensor reading considered valid.
# max_obstacle_height: 100.0,
# #The minimum height in meters of a sensor reading considered valid.
# min_obstacle_height: 1.0,
# #The maximum range in meters at which to insert obstacles into the costmap using sensor data.
# obstacle_range: 100.0
# }
